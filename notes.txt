git clone https://....
cd _folder_
npm init -y (creates pacakge.json & forces defaults without questions)
npm install --save babel-loader babel-core babel-preset-env (used to be es2015) babel-present-react (all babel dependencies)
  Note: may have to install these globally if they don't resolve
touch .babelrc (create babel config file)
npm install --save-dev webpack webpack-dev-sever path
touch webpack.config.js (fill in all of your setup config)
mkdir src (folder for all of your react stuff)
cd src
touch index.js (entry point for app & babel)
touch index.html (add entry div point, and js script src for app)
mkdir dist (target location for bundle.js, which will be used to serve the app)
add custom start command to package.json to kick off the app: "start": "blah blah"
npm install --save react react-dom
npm install --save express
create the express server in server.js

Sass
  Make sure that it's installed
  Create a /css and /scss folder in your directory
  Run sass --watch scss:css (this tells it to compile scss files into one stylesheet in the css
    folder, and recompile on the fly when a change is made)

CSS modules
  npm i -D css-loader style-loader
  add the style-loader and css-loader into the webpack config file

  npm i -D extract-text-webpack-plugin (text extractor to make our imported style into another
    file instead of inline in a <style> tag)
  var ExtractTextPlugin = require('extract-text-webpack-plugin');

